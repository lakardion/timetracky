// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // url      = "file:./db.sqlite"
    url      = env("DATABASE_URL")
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    projects      Project[]
    hours         Hour[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

//business
model Client {
    id String @id @default(cuid())
    name String
    projects Project[]
}
model Project{
    id String @id @default(cuid())
    hours Hour[]
    name String @unique
    creator User @relation(fields:[creatorId], references:[id],onDelete:Cascade)
    creatorId String
    client Client @relation(fields:[clientId],references:[id],onDelete:Cascade)
    clientId String
}
model Hour{
    id String @id @default(cuid())
    date DateTime
    description String
    value Decimal
    project Project @relation(fields:[projectId],references: [id])
    projectId String
    tags HourTag[]
    user User @relation(fields:[userId], references:[id])
    userId String
    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now()) 
}

model HourTag{
    hour Hour @relation(fields:[hourId],references:[id])
    hourId String
    tag Tag @relation(fields:[tagId], references:[id])
    tagId String

    @@id([hourId,tagId])
}
model Tag{
    id String @id @default(cuid())
    name String
    hours HourTag[]
}